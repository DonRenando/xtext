/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import org.xtext.example.mydsl.myDsl.Model
import javax.xml.ws.Response
import org.xtext.example.mydsl.myDsl.ReponseT
import org.xtext.example.mydsl.myDsl.ReponseF

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		fsa.generateFile('greetings.txt', toQCM(resource.contents.head as Model))
		//	resource.contents.head+
		//	resource.allContents
		//		.filter(typeof(Greeting))
		//		.join(', '))
				

				
	}
	
	def toQCM(Model m)'''
\element{general}{
		«FOR c : m.greetings»
		\begin{question}{q12}
 	 «c.question»
    \begin{reponses}
    «FOR r : c.reponses»
    «IF r instanceof ReponseT »
      \bonne{«r.name»}
		«ENDIF»   
		    «IF r instanceof ReponseF »
      \mauvaise{«r.name»}
      	«ENDIF» 
      	
      «ENDFOR»
    \end{reponses}
  \end{question}
}	
	«ENDFOR»
	''' 
}
